{"version":3,"sources":["Components/Icons sync /.svg$","Components/Icons/clear-day.svg","Components/Icons/clear-night.svg","Components/Icons/cloudy.svg","Components/Icons/fog.svg","Components/Icons/partly-cloudy-day.svg","Components/Icons/partly-cloudy-night.svg","Components/Icons/rain.svg","Components/Icons/sleet.svg","Components/Icons/snow.svg","Components/Icons/wind.svg","Components/Background/Day sync /.jpg$","Components/Background/Day/clear-day.jpg","Components/Background/Day/cloudy.jpg","Components/Background/Day/fog.jpg","Components/Background/Day/partly-cloudy-day.jpg","Components/Background/Day/rain.jpg","Components/Background/Day/sleet.jpg","Components/Background/Day/snow.jpg","Components/Background/Day/wind.jpg","Components/Background/Night sync /.jpg$","Components/Background/Night/adrian-154479-unsplash.jpg","Components/Background/Night/clear-night.jpg","Components/Background/Night/cloudy.jpg","Components/Background/Night/fog.jpg","Components/Background/Night/partly-cloudy-night.jpg","Components/Background/Night/rain.jpg","Components/Background/Night/sleet.jpg","Components/Background/Night/snow.jpg","Components/Background/Night/wind.jpg","Components/WeatherInfo.js","Components/Forecast.js","Components/App.js","helper.js","serviceWorker.js","index.js"],"names":["map","./clear-day.svg","./clear-night.svg","./cloudy.svg","./fog.svg","./partly-cloudy-day.svg","./partly-cloudy-night.svg","./rain.svg","./sleet.svg","./snow.svg","./wind.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","./clear-day.jpg","./cloudy.jpg","./fog.jpg","./partly-cloudy-day.jpg","./rain.jpg","./sleet.jpg","./snow.jpg","./wind.jpg","./adrian-154479-unsplash.jpg","./clear-night.jpg","./partly-cloudy-night.jpg","Wrapper","styled","div","_templateObject","Icon","img","_templateObject2","Temperature","_templateObject3","Type","_templateObject4","WeekDay","_templateObject5","reqSvgs","require","svgs","reduce","images","path","WeatherInfo","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","weatherData","props","weekDay","mainTheme","react_default","a","createElement","Fragment","src","concat","icon","temp","type","Component","Forecast_templateObject","Forecast","nextDays","Forecast_Wrapper","Components_WeatherInfo","nextDay1","nextDay2","nextDay3","reqDayImgs","reqNightImgs","dayImgs","nightImgs","Background","App_templateObject","bgUrl","App_templateObject2","App","_this","call","state","_this2","fetch","then","resp","json","ip","lat","Math","round","lon","setState","sunrise","sunset","dayOfWeek","time","Date","getDay","weatherType","clear-day","clear-night","cloudy","fog","partly-cloudy-day","partly-cloudy-night","rain","snow","sleet","wind","currently","temperature","isDayLight","daily","data","sunriseTime","sunsetTime","now","temperatureHigh","setStateTemplate","getLocation","App_Wrapper","Components_Forecast","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0efd868.chunk.js","sourcesContent":["var map = {\n\t\"./clear-day.svg\": 29,\n\t\"./clear-night.svg\": 30,\n\t\"./cloudy.svg\": 31,\n\t\"./fog.svg\": 32,\n\t\"./partly-cloudy-day.svg\": 33,\n\t\"./partly-cloudy-night.svg\": 34,\n\t\"./rain.svg\": 35,\n\t\"./sleet.svg\": 36,\n\t\"./snow.svg\": 37,\n\t\"./wind.svg\": 38\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 28;","module.exports = __webpack_public_path__ + \"static/media/clear-day.9f0634a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.46824d41.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.c268e266.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.f6866f92.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.9c120232.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.a93465c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.4dcbd961.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.c9a2d712.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.93140a78.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.e18b61b1.svg\";","var map = {\n\t\"./clear-day.jpg\": 40,\n\t\"./cloudy.jpg\": 41,\n\t\"./fog.jpg\": 42,\n\t\"./partly-cloudy-day.jpg\": 43,\n\t\"./rain.jpg\": 44,\n\t\"./sleet.jpg\": 45,\n\t\"./snow.jpg\": 46,\n\t\"./wind.jpg\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","module.exports = __webpack_public_path__ + \"static/media/clear-day.f1e52ab8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.99516ec9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog.55d9cdc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.99516ec9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.93d04a5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.93d04a5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.bb0b1e62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wind.9c2393c8.jpg\";","var map = {\n\t\"./adrian-154479-unsplash.jpg\": 49,\n\t\"./clear-night.jpg\": 50,\n\t\"./cloudy.jpg\": 51,\n\t\"./fog.jpg\": 52,\n\t\"./partly-cloudy-night.jpg\": 53,\n\t\"./rain.jpg\": 54,\n\t\"./sleet.jpg\": 55,\n\t\"./snow.jpg\": 56,\n\t\"./wind.jpg\": 57\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/adrian-154479-unsplash.1c45fdd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.5256e3d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.a1d2b3ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog.55d9cdc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.a1d2b3ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.ebb46ef8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.ebb46ef8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.77d184ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wind.0f104073.jpg\";","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst colorIron = '#dee2e2';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: cetner;\r\n  justify-content: center;\r\n  color: ${colorIron}\r\n`\r\nconst Icon = styled.img`\r\n\r\n`\r\nconst Temperature = styled.p`\r\n  text-align: center;\r\n`\r\n\r\nconst Type = styled.p`\r\n  text-align: center;\r\n`\r\nconst WeekDay = styled.p`\r\n  text-align: center;\r\n`\r\n\r\nconst reqSvgs = require.context('./Icons', true, /\\.svg$/)\r\n\r\nconst svgs = reqSvgs\r\n  .keys()\r\n  .reduce((images, path) => {\r\n    images[path] = reqSvgs(path)\r\n    return images\r\n  }, {})\r\n\r\nexport class WeatherInfo extends Component {\r\n  render() {\r\n    const weatherData = this.props.weatherData;\r\n    const weekDay = this.props.weekDay;\r\n    const mainTheme = this.props.mainTheme;\r\n    return (\r\n      <Wrapper>\r\n        {weekDay ? (\r\n          <WeekDay>{weekDay}</WeekDay>\r\n        ) : (\r\n            <></>\r\n          )}\r\n        <Icon src={svgs[`./${weatherData.icon}.svg`]} />\r\n        <Temperature mainTheme={mainTheme}>{weatherData.temp}</Temperature>\r\n        <Type>{weatherData.type}</Type>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeatherInfo\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport WeatherInfo from './WeatherInfo';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nexport class Forecast extends Component {\r\n    render() {\r\n        const nextDays = this.props.nextDays;\r\n        return (\r\n            <Wrapper>\r\n                <WeatherInfo mainTheme={true} weekDay={nextDays.nextDay1.weekDay} weatherData={nextDays.nextDay1} />\r\n                <WeatherInfo mainTheme={true} weekDay={nextDays.nextDay2.weekDay} weatherData={nextDays.nextDay2} />\r\n                <WeatherInfo mainTheme={true} weekDay={nextDays.nextDay3.weekDay} weatherData={nextDays.nextDay3} />\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { setStateTemplate } from './../helper.js';\nimport WeatherInfo from './WeatherInfo';\nimport Forecast from './Forecast';\n\nconst reqDayImgs = require.context('./Background/Day', true, /\\.jpg$/)\nconst reqNightImgs = require.context('./Background/Night', true, /\\.jpg$/)\n\nconst dayImgs = reqDayImgs\n  .keys()\n  .reduce((images, path) => {\n    images[path] = reqDayImgs(path)\n    return images\n  }, {})\n\nconst nightImgs = reqNightImgs\n  .keys()\n  .reduce((images, path) => {\n    images[path] = reqNightImgs(path)\n    return images\n  }, {})\n\n\n\nconst Background = styled.div`\nposition: fixed;\nleft: 0;\nright: 0;\nz-index: -1;\n\ndisplay: block;\nbackground-image: ${props => props.bgUrl};\nbackground-size: cover;\nwidth: 100%;\nheight: 100%;\nfilter: blur(5px);\n`\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  getLocation() {\n    fetch('https://cors-anywhere.herokuapp.com/https://api.ipify.org/?format=json')\n      .then(resp => resp.json())\n      .then(resp => resp.ip)\n      .then(resp => {\n        return fetch(`http://ip-api.com/json/${resp}`)\n      })\n      .then(resp => resp.json())\n      .then(resp => {\n        const lat = Math.round(resp.lat);\n        const lon = Math.round(resp.lon);\n        const coords = `${lat},${lon}`;\n        return coords;\n      })\n      .then(resp => {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/390040fe85ad0e8ff9ff687e0b4da4f1/${resp}`)\n          .then(resp => resp.json())\n          .then(resp => {\n            this.setState(setStateTemplate(resp))\n          })\n      })\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  render() {\n    let bgUrl;\n    if (this.state.currently) {\n      const isDayLight = this.state.currently.isDayLight;\n      isDayLight ? bgUrl = `url(${dayImgs[`./${this.state.currently.icon}.jpg`]})` :\n        bgUrl = `url(${nightImgs[`./${this.state.currently.icon}.jpg`]})`\n    }\n    return (\n      <React.Fragment>\n        {this.state.currently ? (\n          <React.Fragment>\n            <Background bgUrl={bgUrl} />\n            <Wrapper>\n                <WeatherInfo mainTheme={false} weatherData={this.state.currently} />\n                <Forecast nextDays={this.state.nextDays} />\n            </Wrapper>\n          </React.Fragment>\n        ) : (\n            <p>Loading.</p>\n          )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const setStateTemplate = (resp) => {\r\n    const dayOfWeek = (time) => {\r\n        const days = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday',\r\n        ];\r\n        const day = new Date(time*1000).getDay();\r\n        return days[day];\r\n    }\r\n    \r\n    const weatherType = {\r\n        'clear-day': 'Clear',\r\n        'clear-night': 'Clear',\r\n        'cloudy': 'Cloudy',\r\n        'fog': 'Foggy',\r\n        'partly-cloudy-day': 'Partly cloudy',\r\n        'partly-cloudy-night': 'Partly cloudy',\r\n        'rain': 'Rainy',\r\n        'snow': 'Snow',\r\n        'sleet': 'Sleet',\r\n        'wind': 'Windy'\r\n    }\r\n\r\n    const isDayLight = (sunrise, sunset) => {\r\n      if (( Date.now() > (sunrise*1000) ) && ( Date.now() < (sunset*1000) )) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    };\r\n\r\n    return {\r\n        currently: {\r\n          icon: resp.currently.icon,\r\n          temp: resp.currently.temperature,\r\n          type: weatherType[resp.currently.icon],\r\n          isDayLight: isDayLight(resp.daily.data[0].sunriseTime, resp.daily.data[0].sunsetTime)\r\n        },\r\n        nextDays: {\r\n          nextDay1: {\r\n            icon: resp.daily.data[1].icon,\r\n            temp: resp.daily.data[1].temperatureHigh,\r\n            type: weatherType[resp.daily.data[1].icon],\r\n            weekDay: dayOfWeek(resp.daily.data[1].time)\r\n          },\r\n          nextDay2: {\r\n            icon: resp.daily.data[2].icon,\r\n            temp: resp.daily.data[2].temperatureHigh,\r\n            type: weatherType[resp.daily.data[2].icon],\r\n            weekDay: dayOfWeek(resp.daily.data[2].time)\r\n          },\r\n          nextDay3: {\r\n            icon: resp.daily.data[3].icon,\r\n            temp: resp.daily.data[3].temperatureHigh,\r\n            type: weatherType[resp.daily.data[3].icon],\r\n            weekDay: dayOfWeek(resp.daily.data[3].time)\r\n          }\r\n        }\r\n      }\r\n}\r\n\r\nexport { setStateTemplate }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}